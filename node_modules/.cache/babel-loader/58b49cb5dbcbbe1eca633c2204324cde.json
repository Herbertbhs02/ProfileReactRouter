{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\hsev\\\\Documents\\\\reactprojects\\\\ProfileReactRouter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hsev\\\\Documents\\\\reactprojects\\\\ProfileReactRouter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hsev\\\\Documents\\\\reactprojects\\\\ProfileReactRouter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hsev\\\\Documents\\\\reactprojects\\\\ProfileReactRouter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hsev\\\\Documents\\\\reactprojects\\\\ProfileReactRouter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\hsev\\\\Documents\\\\reactprojects\\\\ProfileReactRouter\\\\src\\\\Weather.js\";\nimport React from \"react\";\nimport './weather/weather.css';\n\nvar Weather =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Weather, _React$Component);\n\n  function Weather() {\n    var _this;\n\n    _classCallCheck(this, Weather);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Weather).call(this));\n\n    _this.getweather = function (e) {\n      e.preventDefault(); // this.setState({ location: this.state.location });\n\n      var req = _this.state.location;\n\n      if (req === '') {\n        return alert('Enter a location please');\n      }\n\n      var url = \"http://api.openweathermap.org/data/2.5/weather?q=\" + req + \"&APPID=ff365662c9c1a8add9e703a891c19fc7\";\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.setState({\n          data: data,\n          location: ''\n        });\n\n        console.log(_this.state.data.name);\n      });\n    };\n\n    _this.change = function (e) {\n      _this.setState({\n        location: e.target.value\n      });\n    };\n\n    _this.state = {\n      data: {\n        coord: {\n          lon: -75.93,\n          lat: 40.34\n        },\n        weather: [{\n          id: 501,\n          main: \"Rain\",\n          description: \"moderate rain\",\n          icon: \"10n\"\n        }, {\n          id: 701,\n          main: \"Mist\",\n          description: \"mist\",\n          icon: \"50n\"\n        }],\n        base: \"stations\",\n        main: {\n          temp: 294.27,\n          pressure: 1013,\n          humidity: 100,\n          temp_min: 293.15,\n          temp_max: 295.15\n        },\n        visibility: 16093,\n        wind: {\n          speed: 1.5,\n          deg: 130\n        },\n        rain: {\n          \"1h\": 0.71\n        },\n        clouds: {\n          all: 90\n        },\n        dt: 1562577051,\n        sys: {\n          type: 1,\n          id: 5642,\n          message: 0.014,\n          country: \"US\",\n          sunrise: 1562578872,\n          sunset: 1562632556\n        },\n        timezone: -14400,\n        id: 5207728,\n        name: \"Reading\",\n        cod: 200\n      },\n      location: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Weather, [{\n    key: \"render\",\n    value: function render() {\n      var te = this.state.data.main.temp - 273;\n      var fa = 1.8 * (this.state.data.main.temp - 273) + 32;\n      var max = this.state.data.main.temp_max - 273;\n      var min = this.state.data.main.temp_min - 273;\n      return React.createElement(\"div\", {\n        className: \"weather\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Weather Forecast\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Location:\", this.state.data.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Country:\", this.state.data.sys.country), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Temperature:\", te.toFixed(1), \" Celsius, \", fa.toFixed(1), \" Fahrenheit\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Max_temperature:\", max.toFixed(1), \", Min_Temperature:\", min.toFixed(1))), React.createElement(\"form\", {\n        onSubmit: this.getweather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Location\",\n        value: this.state.location,\n        onChange: this.change,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Weather;\n}(React.Component);\n\nexport default Weather;","map":{"version":3,"sources":["C:\\Users\\hsev\\Documents\\reactprojects\\ProfileReactRouter\\src\\Weather.js"],"names":["React","Weather","getweather","e","preventDefault","req","state","location","alert","url","fetch","then","res","json","data","setState","console","log","name","change","target","value","coord","lon","lat","weather","id","main","description","icon","base","temp","pressure","humidity","temp_min","temp_max","visibility","wind","speed","deg","rain","clouds","all","dt","sys","type","message","country","sunrise","sunset","timezone","cod","te","fa","max","min","toFixed","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './weather/weather.css'\r\n\r\nclass Weather extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: {\r\n                coord: {\r\n                    lon: -75.93,\r\n                    lat: 40.34\r\n                },\r\n                weather: [\r\n                    {\r\n                        id: 501,\r\n                        main: \"Rain\",\r\n                        description: \"moderate rain\",\r\n                        icon: \"10n\"\r\n                    },\r\n                    {\r\n                        id: 701,\r\n                        main: \"Mist\",\r\n                        description: \"mist\",\r\n                        icon: \"50n\"\r\n                    }\r\n                ],\r\n                base: \"stations\",\r\n                main: {\r\n                    temp: 294.27,\r\n                    pressure: 1013,\r\n                    humidity: 100,\r\n                    temp_min: 293.15,\r\n                    temp_max: 295.15\r\n                },\r\n                visibility: 16093,\r\n                wind: {\r\n                    speed: 1.5,\r\n                    deg: 130\r\n                },\r\n                rain: {\r\n                    \"1h\": 0.71\r\n                },\r\n                clouds: {\r\n                    all: 90\r\n                },\r\n                dt: 1562577051,\r\n                sys: {\r\n                    type: 1,\r\n                    id: 5642,\r\n                    message: 0.014,\r\n                    country: \"US\",\r\n                    sunrise: 1562578872,\r\n                    sunset: 1562632556\r\n                },\r\n                timezone: -14400,\r\n                id: 5207728,\r\n                name: \"Reading\",\r\n                cod: 200\r\n            },\r\n            location: \"\"\r\n        };\r\n    }\r\n\r\n    getweather = e => {\r\n        e.preventDefault();\r\n        \r\n       // this.setState({ location: this.state.location });\r\n        const req = this.state.location;\r\n          if(req===''){return alert('Enter a location please')}\r\n        var url =\r\n            \"http://api.openweathermap.org/data/2.5/weather?q=\" +\r\n            req +\r\n            \"&APPID=ff365662c9c1a8add9e703a891c19fc7\";\r\n\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({ data: data,location:'' })\r\n               console.log(this.state.data.name)\r\n               \r\n            });\r\n    };\r\n\r\n    change = e => {\r\n        this.setState({ location: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        let te = this.state.data.main.temp - 273;\r\n        let fa = 1.8 * (this.state.data.main.temp - 273) + 32;\r\n        let max = this.state.data.main.temp_max - 273;\r\n        let min = this.state.data.main.temp_min - 273;\r\n        return (\r\n            <div className='weather'>\r\n                <h1>Weather Forecast</h1>\r\n                 \r\n                <div>\r\n                    <p>Location:{this.state.data.name}</p>\r\n                    <p>Country:{this.state.data.sys.country}</p>\r\n                    <p>\r\n                        Temperature:{te.toFixed(1)} Celsius, {fa.toFixed(1)} Fahrenheit\r\n          </p>\r\n                    <p>\r\n                        Max_temperature:{max.toFixed(1)}, Min_Temperature:{min.toFixed(1)}\r\n                    </p>\r\n                </div>\r\n\r\n                <form onSubmit={this.getweather}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Location\"\r\n                        value={this.state.location}\r\n                        onChange={this.change}\r\n                    />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}